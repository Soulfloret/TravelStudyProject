<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.orderworkMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.orderwork" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="name1" property="name1" jdbcType="VARCHAR" />
    <result column="name2" property="name2" jdbcType="VARCHAR" />
    <result column="name3" property="name3" jdbcType="VARCHAR" />
    <result column="name4" property="name4" jdbcType="VARCHAR" />
    <result column="name5" property="name5" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.accp.domain.orderwork" id="BaseResultMap1" extends="BaseResultMap">
  	<collection property="list" ofType="com.accp.domain.orderproductwork" column="id">
  		<id column="opwid" property="id" jdbcType="INTEGER" />
	    <result column="opworderworkid" property="orderworkid" jdbcType="INTEGER" />
	    <result column="opwiid" property="iid" jdbcType="INTEGER" />
	    <result column="opwstarttime" property="starttime" jdbcType="TIMESTAMP" />
	    <result column="opwendtime" property="endtime" jdbcType="TIMESTAMP" />
	    <result column="opwname1" property="name1" jdbcType="VARCHAR" />
	    <result column="opwname2" property="name2" jdbcType="VARCHAR" />
	    <result column="opwname3" property="name3" jdbcType="VARCHAR" />
	    <result column="opwname4" property="name4" jdbcType="VARCHAR" />
	    <result column="opwname5" property="name5" jdbcType="VARCHAR" />
		<association property="area" javaType="com.accp.domain.areas" column="paAreaId">
		    	<id column="arsid" property="id" jdbcType="INTEGER" />
			    <result column="arsaname" property="aname" jdbcType="VARCHAR" />
			    <result column="arspistion" property="pistion" jdbcType="VARCHAR" />
			    <result column="arsname1" property="name1" jdbcType="VARCHAR" />
			    <result column="arsname2" property="name2" jdbcType="VARCHAR" />
			    <result column="arsname3" property="name3" jdbcType="VARCHAR" />
			    <result column="arsname4" property="name4" jdbcType="VARCHAR" />
			    <result column="arsname5" property="name5" jdbcType="VARCHAR" />
		</association>
  		<collection property="list" ofType="com.accp.domain.worduser" column="opwid">
  			<id column="wuid" property="id" jdbcType="INTEGER" />
		    <result column="wuworkId" property="workid" jdbcType="INTEGER" />
		    <result column="wuproductStaffId" property="productstaffid" jdbcType="INTEGER" />
		    <result column="wuname1" property="name1" jdbcType="VARCHAR" />
		    <result column="wuname2" property="name2" jdbcType="VARCHAR" />
		    <result column="wuname3" property="name3" jdbcType="VARCHAR" />
		    <result column="wuname4" property="name4" jdbcType="VARCHAR" />
		    <result column="wuname5" property="name5" jdbcType="VARCHAR" />
  		</collection>
    </collection>
  </resultMap>
  
  <select id="queryByOrderId" resultMap="BaseResultMap1">
	SELECT ow.*,opw.`id` AS opwid,opw.`endTime` AS opwendtime,opw.`iid` AS opwiid,
	opw.`name1` AS opwname1,opw.`name2` AS opwname2,opw.`name3` AS opwname3,opw.`name4` AS opwname4,
	opw.`name5` AS opwname5,opw.`orderWorkId` AS opworderworkid,opw.`startTime` AS opwstarttime,
	wu.`id` AS wuid,wu.`name1` AS wuname1,wu.`name2` AS wuname2,wu.`name3` AS wuname3,wu.`name4` AS wuname4,
	wu.`name5` AS wuname5,wu.`productStaffId` AS wuproductstaffid,wu.`workId` AS wuworkid,
	ars.`id` AS arsid,ars.`aName` AS arsaname,ars.`name1` AS name1,
	ars.`name2` AS arsname2,ars.`name3` AS arsname2,ars.`name3` AS arsname3,ars.`name4` AS arsname4,ars.`name5` AS arsname5,
	ars.`pistion` AS arspistion
	FROM orderwork AS ow 
	INNER JOIN OrderProductWork AS opw ON ow.`id`=opw.`orderWorkId` 
	INNER JOIN worduser AS wu ON opw.`id`=wu.`workId`
	INNER JOIN areas AS ars ON ars.`id`=opw.`name1`
	WHERE ow.`orderId`=#{id}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderId, name1, name2, name3, name4, name5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.orderworkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderwork
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderwork
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderwork
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.orderworkExample" >
    delete from orderwork
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.accp.domain.orderwork" >
    insert into orderwork (id, orderId, name1, 
      name2, name3, name4, 
      name5)
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{name1,jdbcType=VARCHAR}, 
      #{name2,jdbcType=VARCHAR}, #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, 
      #{name5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.orderwork" >
    insert into orderwork
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="name1 != null" >
        name1,
      </if>
      <if test="name2 != null" >
        name2,
      </if>
      <if test="name3 != null" >
        name3,
      </if>
      <if test="name4 != null" >
        name4,
      </if>
      <if test="name5 != null" >
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.orderworkExample" resultType="java.lang.Integer" >
    select count(*) from orderwork
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderwork
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.name1 != null" >
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null" >
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null" >
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null" >
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null" >
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderwork
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.orderwork" >
    update orderwork
    <set >
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.orderwork" >
    update orderwork
    set orderId = #{orderid,jdbcType=INTEGER},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>