<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.MealMapper">
	<resultMap id="BaseResultMap" type="com.accp.domain.Meal">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="name1" property="name1" jdbcType="VARCHAR" />
		<result column="name2" property="name2" jdbcType="VARCHAR" />
		<result column="name3" property="name3" jdbcType="VARCHAR" />
		<result column="name4" property="name4" jdbcType="VARCHAR" />
		<result column="name5" property="name5" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap type="com.accp.domain.Meal" id="BaseResultMap1"
		extends="BaseResultMap">
		<collection property="list" column="id"
			ofType="com.accp.domain.Mealix">
			<id column="mxid" property="id" jdbcType="INTEGER" />
			<result column="tid" property="tid" jdbcType="INTEGER" />
			<result column="typeId" property="typeid" jdbcType="INTEGER" />
			<result column="iid" property="iid" jdbcType="INTEGER" />
			<result column="mxname1" property="name1" jdbcType="VARCHAR" />
			<result column="mxname2" property="name2" jdbcType="VARCHAR" />
			<result column="mxname3" property="name3" jdbcType="VARCHAR" />
			<result column="mxname4" property="name4" jdbcType="VARCHAR" />
			<result column="mxname5" property="name5" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<resultMap type="com.accp.domain.Meal" id="Map"
		extends="BaseResultMap">
		<collection property="list" ofType="com.accp.domain.Mealix">
			<id column="mid" property="id" />
			<result column="tid" property="tid" jdbcType="INTEGER" />
			<result column="typeId" property="typeid" jdbcType="INTEGER" />
			<result column="iid" property="iid" jdbcType="INTEGER" />
		</collection>
		<collection property="plist"
			ofType="com.accp.domain.project">
			<id column="pid" property="id" />
			<result column="pname" property="pname" />
			<result column="pprice" property="price" />
		</collection>
		<collection property="rlist" ofType="com.accp.domain.room">
			<id column="rid" property="id" />
			<result column="rname" property="rname" />
			<result column="rprice" property="price" />
		</collection>
		<collection property="blist" ofType="com.accp.domain.bind">
			<id column="bid" property="id" />
			<result column="bname" property="mname" />
			<result column="bprice" property="price" />
		</collection>
		<collection property="mlist" ofType="com.accp.domain.menu">
			<id column="mid" property="id" />
			<result column="mname" property="mname" />
			<result column="mprice" property="price" />
		</collection>
	</resultMap>
	<select id="query" resultMap="BaseResultMap1">
		select m.*,mx.`id` as mxid,mx.`iid`,mx.`tid`,mx.`typeId`,mx.`name1` as
		mxname1,mx.`name2` as mxname2,
		mx.`name3` as mxname3,mx.`name4` as
		mxname4,mx.`name5` as mxname5 from meal as
		m,mealix as mx where
		m.`id`=mx.`tid`
		<if test="id!=null">
			and m.id=#{id}
		</if>
	</select>


	<select id="menuAjaxQuery" resultMap="Map">
		SELECT
		me.`name`,me.`price`,me.`name1`,b.`mName` AS
		bname,b.`price` AS
		bprice,b.`stock` AS bstock,m.`mname` AS
		mname,m.`price` AS mprice FROM
		meal AS me
		INNER JOIN mealix AS mi ON mi.`tid`=me.`id`
		INNER JOIN bind
		AS b ON b.`id`=mi.`iid` AND mi.`typeId`=4
		INNER JOIN menubind AS mb ON
		mb.`BindId`=b.`id`
		INNER JOIN menu AS m ON m.`id`=mb.`menuId`
		WHERE
		me.`id`=#{id}
	</select>

	<select id="projectAjaxQuery" resultMap="Map">
		select
		me.`name`,me.`price`,me.`name1`,p.`pName` AS pname,p.`price` AS pprice
		from meal as me
		inner join mealix as mi on mi.`tid`=me.`id`
		inner join
		project as p on p.`id`=mi.`iid` and mi.`typeId`=1
		where me.`id`=#{id}
	</select>


	<select id="mealMenuQueryById" resultMap="Map">
		SELECT b.`mName` AS
		bname ,b.`price` AS
		bprice,m.`mname` AS mname,m.`price` AS mprice FROM
		meal AS me INNER
		JOIN mealix AS mi ON mi.`tid`=me.`id` INNER JOIN bind
		AS b ON
		b.`id`=mi.`iid` INNER JOIN menubind AS mb ON mb.`BindId`=b.`id`
		INNER
		JOIN menu AS m ON m.`id`=mb.`menuId`
		WHERE me.id=#{id}
	</select>

	<select id="mealRoomQueryById" resultMap="Map">
		SELECT r.`rname` AS
		rname, r.`price` AS rprice FROM
		meal AS me INNER JOIN mealix AS mi ON
		mi.`tid`=me.`id` INNER JOIN room
		AS r ON r.`id`=mi.`iid`
		WHERE
		me.id=#{id}
	</select>

	<select id="mealProjectQueryById" resultMap="Map">
		SELECT p.`pName` AS
		pname,p.`price`AS pprice FROM meal AS me INNER JOIN
		mealix AS mi ON
		mi.`tid`=me.`id`
		INNER JOIN project AS p ON p.`id`=mi.`iid`
		WHERE
		me.id=#{id}
	</select>

	<select id="mealQuery" resultMap="Map">
		SELECT
		me.`id`,me.`name`,me.`price`,me.name1,pr.`pName` AS pname ,pr.`price`
		AS pprice,r.`rname` AS rname ,r.`price` AS rprice,b.mname AS bname ,
		b.price AS bprice FROM meal AS me JOIN
		mealix AS mi ON
		mi.`tid`=me.`id`
		INNER JOIN bind AS b ON
		b.`id`=mi.`iid` INNER JOIN
		menubind AS mb ON
		mb.`BindId`=b.`id` INNER
		JOIN menu AS m ON
		m.`id`=mi.`iid` INNER JOIN
		room AS r ON
		r.`id`=mi.`iid` INNER JOIN
		project AS pr ON
		pr.`id`=mi.`iid`
		GROUP BY me.`id`
	</select>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, price, status, name1, name2, name3, name4, name5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.accp.domain.MealExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from meal
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from meal
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from meal
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.accp.domain.MealExample">
		delete from meal
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.accp.domain.Meal">
		insert into meal (id, name,
		price,
		status, name1, name2,
		name3, name4, name5
		)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{price,jdbcType=DOUBLE},
		#{status,jdbcType=INTEGER},
		#{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR},
		#{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR},
		#{name5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.accp.domain.Meal">
		insert into meal
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="name1 != null">
				name1,
			</if>
			<if test="name2 != null">
				name2,
			</if>
			<if test="name3 != null">
				name3,
			</if>
			<if test="name4 != null">
				name4,
			</if>
			<if test="name5 != null">
				name5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="name1 != null">
				#{name1,jdbcType=VARCHAR},
			</if>
			<if test="name2 != null">
				#{name2,jdbcType=VARCHAR},
			</if>
			<if test="name3 != null">
				#{name3,jdbcType=VARCHAR},
			</if>
			<if test="name4 != null">
				#{name4,jdbcType=VARCHAR},
			</if>
			<if test="name5 != null">
				#{name5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.accp.domain.MealExample"
		resultType="java.lang.Integer">
		select count(*) from meal
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update meal
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.name1 != null">
				name1 = #{record.name1,jdbcType=VARCHAR},
			</if>
			<if test="record.name2 != null">
				name2 = #{record.name2,jdbcType=VARCHAR},
			</if>
			<if test="record.name3 != null">
				name3 = #{record.name3,jdbcType=VARCHAR},
			</if>
			<if test="record.name4 != null">
				name4 = #{record.name4,jdbcType=VARCHAR},
			</if>
			<if test="record.name5 != null">
				name5 = #{record.name5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update meal
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		price =
		#{record.price,jdbcType=DOUBLE},
		status =
		#{record.status,jdbcType=INTEGER},
		name1 =
		#{record.name1,jdbcType=VARCHAR},
		name2 =
		#{record.name2,jdbcType=VARCHAR},
		name3 =
		#{record.name3,jdbcType=VARCHAR},
		name4 =
		#{record.name4,jdbcType=VARCHAR},
		name5 =
		#{record.name5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.accp.domain.Meal">
		update meal
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="name1 != null">
				name1 = #{name1,jdbcType=VARCHAR},
			</if>
			<if test="name2 != null">
				name2 = #{name2,jdbcType=VARCHAR},
			</if>
			<if test="name3 != null">
				name3 = #{name3,jdbcType=VARCHAR},
			</if>
			<if test="name4 != null">
				name4 = #{name4,jdbcType=VARCHAR},
			</if>
			<if test="name5 != null">
				name5 = #{name5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.accp.domain.Meal">
		update meal
		set name = #{name,jdbcType=VARCHAR},
		price =
		#{price,jdbcType=DOUBLE},
		status = #{status,jdbcType=INTEGER},
		name1 =
		#{name1,jdbcType=VARCHAR},
		name2 = #{name2,jdbcType=VARCHAR},
		name3 =
		#{name3,jdbcType=VARCHAR},
		name4 = #{name4,jdbcType=VARCHAR},
		name5 =
		#{name5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>