<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.discussiongroupMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.discussiongroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="groupName" property="groupname" jdbcType="VARCHAR" />
    <result column="groupSize" property="groupsize" jdbcType="INTEGER" />
    <result column="groupDescribe" property="groupdescribe" jdbcType="VARCHAR" />
    <result column="groupMainId" property="groupmainid" jdbcType="INTEGER" />
    <result column="name1" property="name1" jdbcType="VARCHAR" />
    <result column="name2" property="name2" jdbcType="VARCHAR" />
    <result column="name3" property="name3" jdbcType="VARCHAR" />
    <result column="name4" property="name4" jdbcType="VARCHAR" />
    <result column="name5" property="name5" jdbcType="VARCHAR" />
  </resultMap>
  
    <select id="selectAllDiscussionGroup" resultMap="BaseResultMap">
	SELECT  *  FROM discussiongroup WHERE id IN (
		SELECT  did FROM discussiongroupson WHERE userid=#{uid}
	)
  </select>
  
  <select id="selectByuidAndGroupName" resultMap="BaseResultMap">
  	SELECT  * FROM 	discussiongroup WHERE groupName LIKE CONCAT('%',#{name},'%') AND id NOT IN (
		SELECT did FROM discussiongroupson WHERE userId=#{uid}
	)
  </select>
  
  <!--  根据 用户id 查询用户是否存在该讨论组-->
  <select id="selectDisBysonUidAndDid" resultType="com.accp.domain.discussiongroup">
  	SELECT * FROM discussiongroup AS d WHERE d.id=(SELECT did FROM discussiongroupson WHERE userid=#{uid} AND did=#{did})
  </select>
  
    <update id="updateDisName">
    	update discussiongroup set groupName=#{groupname} where id=#{id}
    </update>
  
   <!--  根据讨论组名称 模糊查询讨论组-->
  <select id="selectByname" resultMap="BaseResultMap">
  	select * from discussiongroup where groupName like CONCAT('%',#{name},'%')
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, groupName, groupSize, groupDescribe, groupMainId, name1, name2, name3, name4, 
    name5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.discussiongroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from discussiongroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from discussiongroup
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from discussiongroup
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.discussiongroupExample" >
    delete from discussiongroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.accp.domain.discussiongroup" >
    insert into discussiongroup (id, groupName, groupSize, 
      groupDescribe, groupMainId, name1, 
      name2, name3, name4, 
      name5)
    values (#{id,jdbcType=INTEGER}, #{groupname,jdbcType=VARCHAR}, #{groupsize,jdbcType=INTEGER}, 
      #{groupdescribe,jdbcType=VARCHAR}, #{groupmainid,jdbcType=INTEGER}, #{name1,jdbcType=VARCHAR}, 
      #{name2,jdbcType=VARCHAR}, #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, 
      #{name5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.discussiongroup" >
    insert into discussiongroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupname != null" >
        groupName,
      </if>
      <if test="groupsize != null" >
        groupSize,
      </if>
      <if test="groupdescribe != null" >
        groupDescribe,
      </if>
      <if test="groupmainid != null" >
        groupMainId,
      </if>
      <if test="name1 != null" >
        name1,
      </if>
      <if test="name2 != null" >
        name2,
      </if>
      <if test="name3 != null" >
        name3,
      </if>
      <if test="name4 != null" >
        name4,
      </if>
      <if test="name5 != null" >
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupname != null" >
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="groupsize != null" >
        #{groupsize,jdbcType=INTEGER},
      </if>
      <if test="groupdescribe != null" >
        #{groupdescribe,jdbcType=VARCHAR},
      </if>
      <if test="groupmainid != null" >
        #{groupmainid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.discussiongroupExample" resultType="java.lang.Integer" >
    select count(*) from discussiongroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update discussiongroup
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupname != null" >
        groupName = #{record.groupname,jdbcType=VARCHAR},
      </if>
      <if test="record.groupsize != null" >
        groupSize = #{record.groupsize,jdbcType=INTEGER},
      </if>
      <if test="record.groupdescribe != null" >
        groupDescribe = #{record.groupdescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.groupmainid != null" >
        groupMainId = #{record.groupmainid,jdbcType=INTEGER},
      </if>
      <if test="record.name1 != null" >
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null" >
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null" >
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null" >
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null" >
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update discussiongroup
    set id = #{record.id,jdbcType=INTEGER},
      groupName = #{record.groupname,jdbcType=VARCHAR},
      groupSize = #{record.groupsize,jdbcType=INTEGER},
      groupDescribe = #{record.groupdescribe,jdbcType=VARCHAR},
      groupMainId = #{record.groupmainid,jdbcType=INTEGER},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.discussiongroup" >
    update discussiongroup
    <set >
      <if test="groupname != null" >
        groupName = #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="groupsize != null" >
        groupSize = #{groupsize,jdbcType=INTEGER},
      </if>
      <if test="groupdescribe != null" >
        groupDescribe = #{groupdescribe,jdbcType=VARCHAR},
      </if>
      <if test="groupmainid != null" >
        groupMainId = #{groupmainid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.discussiongroup" >
    update discussiongroup
    set groupName = #{groupname,jdbcType=VARCHAR},
      groupSize = #{groupsize,jdbcType=INTEGER},
      groupDescribe = #{groupdescribe,jdbcType=VARCHAR},
      groupMainId = #{groupmainid,jdbcType=INTEGER},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>