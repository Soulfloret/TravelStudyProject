<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.roomMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.room" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rname" property="rname" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="typeId" property="typeid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="name1" property="name1" jdbcType="VARCHAR" />
    <result column="name2" property="name2" jdbcType="VARCHAR" />
    <result column="name3" property="name3" jdbcType="VARCHAR" />
    <result column="name4" property="name4" jdbcType="VARCHAR" />
    <result column="name5" property="name5" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.accp.domain.room" id="BaseResultMap1" extends="BaseResultMap">
  		<association property="img" javaType="com.accp.domain.images">
  			<id column="iid" property="id" jdbcType="INTEGER" />
		    <result column="url" property="url" jdbcType="VARCHAR" />
  		</association>
  </resultMap>
  
  <resultMap type="com.accp.domain.room" id="BaseResultMap2" extends="BaseResultMap">
  		<collection property="imgs" ofType="com.accp.domain.images">
  			<id column="iid" property="id" jdbcType="INTEGER" />
    		<result column="url" property="url" jdbcType="VARCHAR" />
  		</collection>
  </resultMap>
  
  
  <select id="queryByroomid" resultMap="BaseResultMap2">
  		SELECT r.*,i.`id` AS iid,i.`url`
		FROM `room` r 
		LEFT JOIN `images` i ON r.`id`=i.`iid` AND i.`typeId`=3
		WHERE r.`id`=#{id}
  </select>
  
  <select id="queryByroomdestineid" resultMap="BaseResultMap">
  		SELECT r.* FROM room AS r 
		WHERE r.`id` NOT IN 
		(SELECT rd.`roomId` FROM roomdestine AS rd 
			WHERE	DATEDIFF(#{begintime},rd.`begintime`)&lt;=0  AND DATEDIFF(#{endtime},rd.`endTime`)&gt;=0
		) 
		AND r.`id`=#{roomid}
  </select>
  
  
  <select id="queryByroom" resultMap="BaseResultMap1">
  	SELECT r.*,i.`id` AS iid,i.`url` FROM room   r LEFT JOIN `images` i ON r.id=i.`iid` AND i.`typeId`=3
  	<where>
  		<if test="typeid!=null and typeid!=''">
  			r.typeid=#{typeid}
  		</if>
  		<if test="id!=null and id!=''">
  			r.id=#{id}
  		</if>
  	</where>
  </select>
  
  <select id="queryByroomtypeid" resultMap="BaseResultMap1">
  		SELECT r.*,i.`id` AS iid,i.`url` FROM room   r LEFT JOIN `images` i ON r.id=i.`iid` AND i.`typeId`=3
		WHERE r.`typeId`=3
		LIMIT 0,3
  </select>
  
  
  
  
  <select id="recommendByidroom" resultType="com.accp.domain.recommend">
  		SELECT `rname` AS `name`,`introduce` AS pname,price AS price,id FROM `room` WHERE id=#{id}
  </select>
  
  <select id="queryRoomAll" resultType="com.accp.domain.room">
  		SELECT * FROM `room`
  		<where>
	  		<if test="typeid!=null and typeid!=0">
	  			typeid=#{typeid}
	  		</if>
	  		<if test="rname!=null and rname!=''">
	  			rname=#{rname}
	  		</if>
  		</where>
  </select>
  
   <select id="queryByroomData" resultMap="BaseResultMap1">
  	SELECT r.*,i.`id` AS iid,i.`url` FROM room AS r  LEFT JOIN `images` i ON r.`id`=i.`iid` AND i.`typeId`=3
	WHERE r.`id` NOT IN 
	(SELECT rd.`roomId` FROM roomdestine AS rd 
		where	DATEDIFF(#{begintime},rd.`begintime`)&lt;=0  AND DATEDIFF(#{endtime},rd.`endTime`)&gt;=0
	) 
  	
  </select>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rname, location, introduce, typeId, price, state, name1, name2, name3, name4, 
    name5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.roomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.roomExample" >
    delete from room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.room" >
    insert into room (id, rname, location, 
      introduce, typeId, price, 
      state, name1, name2, 
      name3, name4, name5
      )
    values (#{id,jdbcType=INTEGER}, #{rname,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{state,jdbcType=VARCHAR}, #{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, 
      #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, #{name5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id"  useGeneratedKeys="true" parameterType="com.accp.domain.room" >
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rname != null" >
        rname,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="typeid != null" >
        typeId,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="name1 != null" >
        name1,
      </if>
      <if test="name2 != null" >
        name2,
      </if>
      <if test="name3 != null" >
        name3,
      </if>
      <if test="name4 != null" >
        name4,
      </if>
      <if test="name5 != null" >
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rname != null" >
        #{rname,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null" >
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.roomExample" resultType="java.lang.Integer" >
    select count(*) from room
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update room
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rname != null" >
        rname = #{record.rname,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.name1 != null" >
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null" >
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null" >
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null" >
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null" >
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update room
    set id = #{record.id,jdbcType=INTEGER},
      rname = #{record.rname,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      typeId = #{record.typeid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=VARCHAR},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.room" >
    update room
    <set >
      <if test="rname != null" >
        rname = #{rname,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null" >
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.room" >
    update room
    set rname = #{rname,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      typeId = #{typeid,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=VARCHAR},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>