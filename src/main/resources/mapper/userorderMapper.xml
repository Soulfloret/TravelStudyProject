<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.userorderMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.userorder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="OrderNo" property="orderno" jdbcType="VARCHAR" />
    <result column="orderTime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="orderUser" property="orderuser" jdbcType="INTEGER" />
    <result column="orderCustomer" property="ordercustomer" jdbcType="INTEGER" />
    <result column="orderMainId" property="ordermainid" jdbcType="INTEGER" />
    <result column="orderStatus" property="orderstatus" jdbcType="VARCHAR" />
    <result column="name1" property="name1" jdbcType="VARCHAR" />
    <result column="name2" property="name2" jdbcType="VARCHAR" />
    <result column="name3" property="name3" jdbcType="VARCHAR" />
    <result column="name4" property="name4" jdbcType="VARCHAR" />
    <result column="name5" property="name5" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 活动详情查询参与人员 -->
  <resultMap type="com.accp.domain.userorder" id="result_QueryByProductXq" extends="BaseResultMap">
  	<collection property="list" column="id" ofType="com.accp.domain.orderson"></collection>
  </resultMap>
  
  <select id="QueryByProductXq" resultMap="result_QueryByProductXq">
  	SELECT * FROM `orderson`
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, OrderNo, orderTime, orderUser, orderCustomer, orderMainId, orderStatus, name1, 
    name2, name3, name4, name5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.userorderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.userorderExample" >
    delete from userorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.accp.domain.userorder" >
    insert into userorder (id, OrderNo, orderTime, 
      orderUser, orderCustomer, orderMainId, 
      orderStatus, name1, name2, 
      name3, name4, name5
      )
    values (#{id,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, 
      #{orderuser,jdbcType=INTEGER}, #{ordercustomer,jdbcType=INTEGER}, #{ordermainid,jdbcType=INTEGER}, 
      #{orderstatus,jdbcType=VARCHAR}, #{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, 
      #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, #{name5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.userorder" >
    insert into userorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderno != null" >
        OrderNo,
      </if>
      <if test="ordertime != null" >
        orderTime,
      </if>
      <if test="orderuser != null" >
        orderUser,
      </if>
      <if test="ordercustomer != null" >
        orderCustomer,
      </if>
      <if test="ordermainid != null" >
        orderMainId,
      </if>
      <if test="orderstatus != null" >
        orderStatus,
      </if>
      <if test="name1 != null" >
        name1,
      </if>
      <if test="name2 != null" >
        name2,
      </if>
      <if test="name3 != null" >
        name3,
      </if>
      <if test="name4 != null" >
        name4,
      </if>
      <if test="name5 != null" >
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderuser != null" >
        #{orderuser,jdbcType=INTEGER},
      </if>
      <if test="ordercustomer != null" >
        #{ordercustomer,jdbcType=INTEGER},
      </if>
      <if test="ordermainid != null" >
        #{ordermainid,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        #{orderstatus,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null" >
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.userorderExample" resultType="java.lang.Integer" >
    select count(*) from userorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userorder
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderno != null" >
        OrderNo = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.ordertime != null" >
        orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderuser != null" >
        orderUser = #{record.orderuser,jdbcType=INTEGER},
      </if>
      <if test="record.ordercustomer != null" >
        orderCustomer = #{record.ordercustomer,jdbcType=INTEGER},
      </if>
      <if test="record.ordermainid != null" >
        orderMainId = #{record.ordermainid,jdbcType=INTEGER},
      </if>
      <if test="record.orderstatus != null" >
        orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.name1 != null" >
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null" >
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null" >
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null" >
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null" >
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userorder
    set id = #{record.id,jdbcType=INTEGER},
      OrderNo = #{record.orderno,jdbcType=VARCHAR},
      orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      orderUser = #{record.orderuser,jdbcType=INTEGER},
      orderCustomer = #{record.ordercustomer,jdbcType=INTEGER},
      orderMainId = #{record.ordermainid,jdbcType=INTEGER},
      orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.userorder" >
    update userorder
    <set >
      <if test="orderno != null" >
        OrderNo = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null" >
        orderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderuser != null" >
        orderUser = #{orderuser,jdbcType=INTEGER},
      </if>
      <if test="ordercustomer != null" >
        orderCustomer = #{ordercustomer,jdbcType=INTEGER},
      </if>
      <if test="ordermainid != null" >
        orderMainId = #{ordermainid,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        orderStatus = #{orderstatus,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null" >
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.userorder" >
    update userorder
    set OrderNo = #{orderno,jdbcType=VARCHAR},
      orderTime = #{ordertime,jdbcType=TIMESTAMP},
      orderUser = #{orderuser,jdbcType=INTEGER},
      orderCustomer = #{ordercustomer,jdbcType=INTEGER},
      orderMainId = #{ordermainid,jdbcType=INTEGER},
      orderStatus = #{orderstatus,jdbcType=VARCHAR},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>