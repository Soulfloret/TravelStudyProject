<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.staffMapper">
	<resultMap id="BaseResultMap" type="com.accp.domain.staff">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userId" property="userid" jdbcType="INTEGER" />
		<result column="entryTime" property="entrytime"
			jdbcType="TIMESTAMP" />
		<result column="departureTime" property="departuretime"
			jdbcType="TIMESTAMP" />
		<result column="DepartMentId" property="departmentid"
			jdbcType="INTEGER" />
		<result column="PostionId" property="postionid"
			jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="name1" property="name1" jdbcType="VARCHAR" />
		<result column="name2" property="name2" jdbcType="VARCHAR" />
		<result column="name3" property="name3" jdbcType="VARCHAR" />
		<result column="name4" property="name4" jdbcType="VARCHAR" />
		<result column="name5" property="name5" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap type="com.accp.domain.staff" id="Map"
		extends="BaseResultMap">
		<association property="ulist"
			javaType="com.accp.domain.users">
			<id column="uid" property="id" jdbcType="INTEGER" />
			<result column="uname" property="uname" jdbcType="VARCHAR" />
			<result column="uPassword" property="upassword"
				jdbcType="VARCHAR" />
			<result column="idCardNo" property="idcardno"
				jdbcType="VARCHAR" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="address" property="address" jdbcType="VARCHAR" />
			<result column="height" property="height" jdbcType="DOUBLE" />
			<result column="width" property="width" jdbcType="DOUBLE" />
			<result column="TypeId" property="typeid" jdbcType="INTEGER" />
		</association>

		<association property="slist"
			javaType="com.accp.domain.signin">
			<id column="sid" property="id" jdbcType="INTEGER" />
			<result column="stid" property="staffid" jdbcType="INTEGER" />
			<result column="SignInTime" property="signintime"
				jdbcType="TIMESTAMP" />
		</association>

		<association property="plist"
			javaType="com.accp.domain.positions">
			<id column="pid" property="id" jdbcType="INTEGER" />
			<result column="postion" property="postion" jdbcType="VARCHAR" />
		</association>
		<association property="salist"
			javaType="com.accp.domain.salary">
			<id column="said" property="id" jdbcType="INTEGER" />
			<result column="BaseSalary" property="basesalary"
				jdbcType="INTEGER" />
			<result column="pid" property="pid" jdbcType="INTEGER" />
		</association>
	</resultMap>


	<!-- 根据usersid查询员工薪资 、打卡次数 -->
	<select id="salaryQueryId" resultMap="Map">
		SELECT
		users.`uName`,positions.`postion`,COUNT(signin.`staffId`) AS stid FROM
		staff
		JOIN signin ON signin.`staffId`=staff.`id`
		JOIN users ON
		users.`id`=staff.`userId`
		JOIN positions ON
		positions.`id`=staff.`PostionId`
		WHERE signin.`staffId`=#{id}
	</select>



	<!-- 查询员工薪资列表 -->
	<select id="salaryQuery" resultMap="Map">
		SELECT
		staff.*,users.*,positions.`postion`,COUNT(*) AS
		stid,salary.`BaseSalary` FROM staff
		JOIN
		users ON
		users.`id`=staff.`userId`
		JOIN positions ON
		positions.`id`=staff.`PostionId`
		JOIN signin ON
		signin.`staffId`=staff.`id`
		JOIN salary ON salary.`pid`=positions.`id`
		GROUP BY staff.`id`
	</select>

	<!-- 模糊查询员工 -->
	<select id="queryLike" resultMap="Map">
		SELECT users.id AS uid,users.`uName`,users.`idCardNo`,
		users.`phone`,users.`address`,users.`height`,users.`width`,
		staff.*,positions.`id` AS pid,positions.`postion`
		FROM users JOIN staff
		ON staff.`userId`=users.`id`
		JOIN positions ON
		positions.`id`=staff.`PostionId`
		<where>
			<if test="postionid!=null">
				AND staff.`PostionId`=#{postionid}
			</if>
			<!-- <if test="name1!=null"> AND uname LIKE CONCAT('%',#{name1},'%') </if> -->
		</where>

	</select>
	<!-- 查询员工资料 -->
	<select id="queryById" resultMap="Map">
		SELECT users.id AS
		uid,users.`uName`,users.`idCardNo`,
		users.`phone`,users.`address`,users.`height`,users.`width`,
		staff.*,positions.`id` AS pid,positions.`postion`
		FROM users inner JOIN staff
		ON staff.`userId`=users.`id`
		left JOIN positions ON
		positions.`id`=staff.`PostionId`
		WHERE staff.`id`=#{id}
	</select>
	<!-- 查询员工列表 -->
	<select id="query" resultMap="Map">
		SELECT
		staff.`id`,`users`.`uName`,positions.`postion`
		,positions.`id` AS pid
		FROM staff
		JOIN positions ON
		staff.`PostionId`=positions.`id`
		JOIN
		`users` ON
		`users`.`id`=staff.`userId`
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, userId, entryTime, departureTime, DepartMentId,
		PostionId, state,
		uname, name2,
		name3, name4, name5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.accp.domain.staffExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from staff
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from staff
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from staff
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.accp.domain.staffExample">
		delete from staff
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.accp.domain.staff">
		insert into staff (id, userId,
		entryTime,
		departureTime, DepartMentId, PostionId,
		state, uname, name2,
		name3, name4, name5
		)
		values (#{id,jdbcType=INTEGER},
		#{userid,jdbcType=INTEGER},
		#{entrytime,jdbcType=TIMESTAMP},
		#{departuretime,jdbcType=TIMESTAMP}, #{departmentid,jdbcType=INTEGER},
		#{postionid,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{uname,jdbcType=VARCHAR},
		#{name2,jdbcType=VARCHAR},
		#{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR},
		#{name5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.accp.domain.staff">
		insert into staff
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userid != null">
				userId,
			</if>
			<if test="entrytime != null">
				entryTime,
			</if>
			<if test="departuretime != null">
				departureTime,
			</if>
			<if test="departmentid != null">
				DepartMentId,
			</if>
			<if test="postionid != null">
				PostionId,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="uname != null">
				uname,
			</if>
			<if test="name2 != null">
				name2,
			</if>
			<if test="name3 != null">
				name3,
			</if>
			<if test="name4 != null">
				name4,
			</if>
			<if test="name5 != null">
				name5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="entrytime != null">
				#{entrytime,jdbcType=TIMESTAMP},
			</if>
			<if test="departuretime != null">
				#{departuretime,jdbcType=TIMESTAMP},
			</if>
			<if test="departmentid != null">
				#{departmentid,jdbcType=INTEGER},
			</if>
			<if test="postionid != null">
				#{postionid,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="uname != null">
				#{uname,jdbcType=VARCHAR},
			</if>
			<if test="name2 != null">
				#{name2,jdbcType=VARCHAR},
			</if>
			<if test="name3 != null">
				#{name3,jdbcType=VARCHAR},
			</if>
			<if test="name4 != null">
				#{name4,jdbcType=VARCHAR},
			</if>
			<if test="name5 != null">
				#{name5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.accp.domain.staffExample"
		resultType="java.lang.Integer">
		select count(*) from staff
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update staff
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null">
				userId = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.entrytime != null">
				entryTime = #{record.entrytime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.departuretime != null">
				departureTime =
				#{record.departuretime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.departmentid != null">
				DepartMentId = #{record.departmentid,jdbcType=INTEGER},
			</if>
			<if test="record.postionid != null">
				PostionId = #{record.postionid,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.uname != null">
				uname = #{record.uname,jdbcType=VARCHAR},
			</if>
			<if test="record.name2 != null">
				name2 = #{record.name2,jdbcType=VARCHAR},
			</if>
			<if test="record.name3 != null">
				name3 = #{record.name3,jdbcType=VARCHAR},
			</if>
			<if test="record.name4 != null">
				name4 = #{record.name4,jdbcType=VARCHAR},
			</if>
			<if test="record.name5 != null">
				name5 = #{record.name5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update staff
		set id = #{record.id,jdbcType=INTEGER},
		userId =
		#{record.userid,jdbcType=INTEGER},
		entryTime =
		#{record.entrytime,jdbcType=TIMESTAMP},
		departureTime =
		#{record.departuretime,jdbcType=TIMESTAMP},
		DepartMentId =
		#{record.departmentid,jdbcType=INTEGER},
		PostionId =
		#{record.postionid,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER},
		uname =
		#{record.uname,jdbcType=VARCHAR},
		name2 =
		#{record.name2,jdbcType=VARCHAR},
		name3 =
		#{record.name3,jdbcType=VARCHAR},
		name4 =
		#{record.name4,jdbcType=VARCHAR},
		name5 =
		#{record.name5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.accp.domain.staff">
		update staff
		<set>
			<if test="userid != null">
				userId = #{userid,jdbcType=INTEGER},
			</if>
			<if test="entrytime != null">
				entryTime = #{entrytime,jdbcType=TIMESTAMP},
			</if>
			<if test="departuretime != null">
				departureTime = #{departuretime,jdbcType=TIMESTAMP},
			</if>
			<if test="departmentid != null">
				DepartMentId = #{departmentid,jdbcType=INTEGER},
			</if>
			<if test="postionid != null">
				PostionId = #{postionid,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="uname != null">
				uname = #{uname,jdbcType=VARCHAR},
			</if>
			<if test="name2 != null">
				name2 = #{name2,jdbcType=VARCHAR},
			</if>
			<if test="name3 != null">
				name3 = #{name3,jdbcType=VARCHAR},
			</if>
			<if test="name4 != null">
				name4 = #{name4,jdbcType=VARCHAR},
			</if>
			<if test="name5 != null">
				name5 = #{name5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.accp.domain.staff">
		update staff
		set userId = #{userid,jdbcType=INTEGER},
		entryTime = #{entrytime,jdbcType=TIMESTAMP},
		departureTime =
		#{departuretime,jdbcType=TIMESTAMP},
		DepartMentId =
		#{departmentid,jdbcType=INTEGER},
		PostionId =
		#{postionid,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		uname
		= #{uname,jdbcType=VARCHAR},
		name2 = #{name2,jdbcType=VARCHAR},
		name3 =
		#{name3,jdbcType=VARCHAR},
		name4 = #{name4,jdbcType=VARCHAR},
		name5 =
		#{name5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>
