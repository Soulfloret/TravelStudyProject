<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.usersMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.users" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uName" property="uname" jdbcType="VARCHAR" />
    <result column="uPassword" property="upassword" jdbcType="VARCHAR" />
    <result column="idCardNo" property="idcardno" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="DOUBLE" />
    <result column="width" property="width" jdbcType="DOUBLE" />
    <result column="TypeId" property="typeid" jdbcType="INTEGER" />
    <result column="name1" property="name1" jdbcType="VARCHAR" />
    <result column="name2" property="name2" jdbcType="VARCHAR" />
    <result column="name3" property="name3" jdbcType="VARCHAR" />
    <result column="name4" property="name4" jdbcType="VARCHAR" />
    <result column="name5" property="name5" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.accp.domain.users" id="ResultMapChen" extends="BaseResultMap">
  	<collection property="orders" column="id" ofType="com.accp.domain.userorder">
  		<id column="uoid" property="id" jdbcType="INTEGER" />
	    <result column="orderNo" property="orderno" jdbcType="VARCHAR" />
	    <result column="orderTime" property="ordertime" jdbcType="TIMESTAMP" />
	    <result column="orderUser" property="orderuser" jdbcType="INTEGER" />
	    <result column="orderCustomer" property="ordercustomer" jdbcType="INTEGER" />
	    <result column="orderMainId" property="ordermainid" jdbcType="INTEGER" />
	    <result column="orderStatus" property="orderstatus" jdbcType="VARCHAR" />
	    <result column="uoname1" property="name1" jdbcType="VARCHAR" />
	    <result column="uoname2" property="name2" jdbcType="VARCHAR" />
	    <result column="uoname3" property="name3" jdbcType="VARCHAR" />
	    <result column="uoname4" property="name4" jdbcType="VARCHAR" />
	    <result column="uoname5" property="name5" jdbcType="VARCHAR" />
	    <collection property="list" column="uoid" ofType="com.accp.domain.orderson">
	    	<id column="osid" property="id" jdbcType="INTEGER" />
		    <result column="osiid" property="iid" jdbcType="INTEGER" />
		    <result column="ostypeId" property="typeid" jdbcType="INTEGER" />
		    <result column="osname1" property="name1" jdbcType="VARCHAR" />
		    <result column="osname2" property="name2" jdbcType="VARCHAR" />
		    <result column="osname3" property="name3" jdbcType="VARCHAR" />
		    <result column="osname4" property="name4" jdbcType="VARCHAR" />
		    <result column="osname5" property="name5" jdbcType="VARCHAR" />
	    </collection>
  	</collection>
  </resultMap>
 <!-- 订单查询接口 -->
  <select id="queryByMainOrderId" resultMap="ResultMapChen">
	 SELECT u.*,uo.`id` AS uoid,uo.`name1` AS uoname1,uo.`name2` AS uoname2,
	 uo.`name3` AS uoname3,uo.`name4` AS  uoname4,uo.`name5` AS uoname5,uo.`orderCustomer`,
	 uo.`orderMainId`,uo.`OrderNo`,uo.`orderStatus`,uo.`orderTime`,uo.`orderUser`,
	 os.`id` AS osid,os.`iid` AS osiid,os.`name1` AS osname1,os.`name2` AS osname2,os.`name3` AS osname3,
	 os.`name4` AS osname4,os.`name5` AS osname5,os.`typeId` AS ostypeId
	 FROM users AS u INNER JOIN userorder AS uo ON u.`id`=uo.`orderCustomer`
	 INNER JOIN orderson AS os ON os.`name1`=uo.`id`
	 <where>
	 	<if test="id!=null">
	 		and uo.`orderMainId`=#{id}		
	 	</if>
	 	<if test="uid!=null">
	 		and u.id=#{uid}
	 	</if>
	   </where>
  </select>

  <resultMap id="MapOne" type="com.accp.domain.users" extends="BaseResultMap">
    <association property="usetype" javaType="com.accp.domain.usertype" >
	     <id property="id" column="TypeId"/>
    	 <result property="tname" column="tName"/>
    </association>
  </resultMap>
  <!-- 根据id 修改用户的类别 -->
  
  <update id="updateTypeIdById">
  	 UPDATE users SET TypeId=#{typeId} WHERE id=#{id}
  </update>
  
  <!--根据身份证判断用户是否存在  -->
  <select id="queryByIdCard" resultMap="BaseResultMap">
  	select * from users where idCardNo=#{idCardNo}
  </select>
  
  
  <!-- 登陆接口 -->
  <select id="queryByName" resultType="com.accp.domain.users">
  		SELECT * FROM `users` WHERE `uName`=#{uname} and `uPassword`=#{upassword} 
  </select> 
  <!--  根据客户名称 以及客户类别查询-->
  <select id="selectAllUsers"  resultMap="MapOne" >
	SELECT s.*,ut.tName FROM users  AS s INNER JOIN usertype AS ut
	ON s.TypeId=ut.id
	<where>
		<if test="uname!=null and uname!=''">
		 and  s.uname LIKE CONCAT('%',#{uname},'%')
		</if>
		<if test="typeId!=null">
			AND s.typeId=#{typeId}	
		</if>
	</where>
	ORDER BY id
  </select>
  
  <sql id="Example_Where_Clause" >
  
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uName, uPassword, idCardNo, phone, address, height, width, TypeId, name1, name2, 
    name3, name4, name5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.usersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.usersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
<<<<<<< HEAD
  </delete>
=======
  </delete>
>>>>>>> refs/remotes/origin/wujiajun
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.accp.domain.users" >
    insert into users (id, uName, uPassword, 
      idCardNo, phone, address, 
      height, width, TypeId, 
      name1, name2, name3, 
      name4, name5)
    values (#{id,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{idcardno,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{height,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, #{typeid,jdbcType=INTEGER}, 
      #{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, #{name3,jdbcType=VARCHAR}, 
      #{name4,jdbcType=VARCHAR}, #{name5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uname != null" >
        uName,
      </if>
      <if test="upassword != null" >
        uPassword,
      </if>
      <if test="idcardno != null" >
        idCardNo,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="width != null" >
        width,
      </if>
      <if test="typeid != null" >
        TypeId,
      </if>
      <if test="name1 != null" >
        name1,
      </if>
      <if test="name2 != null" >
        name2,
      </if>
      <if test="name3 != null" >
        name3,
      </if>
      <if test="name4 != null" >
        name4,
      </if>
      <if test="name5 != null" >
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="idcardno != null" >
        #{idcardno,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.usersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null" >
        uName = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        uPassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardno != null" >
        idCardNo = #{record.idcardno,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=DOUBLE},
      </if>
      <if test="record.width != null" >
        width = #{record.width,jdbcType=DOUBLE},
      </if>
      <if test="record.typeid != null" >
        TypeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.name1 != null" >
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null" >
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null" >
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null" >
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null" >
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set id = #{record.id,jdbcType=INTEGER},
      uName = #{record.uname,jdbcType=VARCHAR},
      uPassword = #{record.upassword,jdbcType=VARCHAR},
      idCardNo = #{record.idcardno,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      TypeId = #{record.typeid,jdbcType=INTEGER},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.users" >
    update users
    <set >
      <if test="uname != null" >
        uName = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        uPassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="idcardno != null" >
        idCardNo = #{idcardno,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="typeid != null" >
        TypeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="name1 != null" >
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null" >
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null" >
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null" >
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null" >
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.users" >
    update users
    set uName = #{uname,jdbcType=VARCHAR},
      uPassword = #{upassword,jdbcType=VARCHAR},
      idCardNo = #{idcardno,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      height = #{height,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      TypeId = #{typeid,jdbcType=INTEGER},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>